# File: .github/workflows/build-openwrt.yml
---
# Inspired by P3TERX <https://p3terx.com>
#
# This workflow automates the build process for OpenWrt firmware.
# It is optimized for speed, reliability, and simplicity.
# Released under the MIT License.

name: Build OpenWrt

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: main
  CONFIG_FILE: .config
  DIY_SCRIPT: diy-part2.sh
  TZ: Europe/Kiev
  UPLOAD_RELEASE: true
  KEEP_LATEST_RELEASES: 3

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set timezone and configure environment
        run: |
          sudo timedatectl set-timezone "$TZ"
          THREADS=$(nproc)
          echo "Using $THREADS threads for compilation"
          echo "BUILD_THREADS=$THREADS" >> $GITHUB_ENV

      - name: Clone OpenWrt repository
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: Load configuration and scripts
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SCRIPT
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_SCRIPT

- name: Setup ccache
  uses: actions/cache@v3
  with:
    path: ~/.ccache
    key: ${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
    restore-keys: |
      ${{ runner.os }}-${{ github.ref }}-
      ${{ runner.os }}-

      - name: Build OpenWrt firmware
        id: build
        run: |
          cd openwrt
          echo "CONFIG_CCACHE=y" >> .config
          make defconfig
          make download -j$BUILD_THREADS
          make -j$BUILD_THREADS || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Organize build artifacts
        if: steps.build.outputs.status == 'success'
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE_DIR=$PWD" >> $GITHUB_ENV

      - name: Upload firmware as artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE_DIR }}

      - name: Create GitHub release
        if: env.UPLOAD_RELEASE == 'true'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.FILE_DATE }}${{ env.DEVICE_NAME }}
          files: ${{ env.FIRMWARE_DIR }}/*

      - name: Cleanup old releases
        if: env.UPLOAD_RELEASE == 'true'
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: ${{ env.KEEP_LATEST_RELEASES }}
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 1
