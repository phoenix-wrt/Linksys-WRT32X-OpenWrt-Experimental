---
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions (modified to include update_hosts.sh)
#
# Modifications:
# - Added wget check to ensure hosts file is successfully downloaded before replacing.
# - Added disk space check before compilation to ensure stability.
# - Optimized dependency installation and cleanup process for performance.
# - Fixed issue with cloning repository when no tags are found.
# - Ensured directory exists before adding cron job to prevent errors.
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://git.openwrt.org/openwrt/openwrt.git
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: "false"
  UPLOAD_FIRMWARE: "true"
  UPLOAD_RELEASE: "false"
  TZ: Europe/Kiev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Setup environment and dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet \
            /usr/local/lib/android /opt/ghc
        sudo apt-get update -qq && sudo apt-get install -qq --no-install-recommends \
            $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo apt-get clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir && sudo chown $USER:$GROUPS /workdir

    - name: Clone the latest OpenWrt source code
      working-directory: /workdir
      run: |
        LATEST_TAG=$(git ls-remote --tags --sort="v:refname" $REPO_URL | grep -v \
            '\^{}' | tail -n1 | sed 's/.*\///')
        if [ -z "$LATEST_TAG" ]; then
          echo "No tags found, using default branch 'master'."
          git clone --depth 1 $REPO_URL openwrt
        else
          echo "Cloning latest tag: $LATEST_TAG"
          git clone --depth 1 --branch $LATEST_TAG $REPO_URL openwrt
        fi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Add custom update_hosts.sh script
      run: |
        cat << 'EOF' > openwrt/package/base-files/files/usr/bin/update_hosts.sh
        #!/bin/sh

        CHECK_URL="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts"
        HOSTS_FILE="/etc/hosts"
        LAST_DATE_FILE="/etc/last_update_date"
        TMP_FILE="/tmp/hosts_tmp"

        if wget -qO $TMP_FILE $CHECK_URL; then
            NEW_DATE=$(grep "^# Date:" $TMP_FILE | awk '{$1=""; print $0}')
            if [ -f "$LAST_DATE_FILE" ]; then
                LAST_DATE=$(cat $LAST_DATE_FILE)
            else
                LAST_DATE=""
            fi

            if [ "$NEW_DATE" != "$LAST_DATE" ]; then
                mv $TMP_FILE $HOSTS_FILE
                echo "$NEW_DATE" > $LAST_DATE_FILE
                /etc/init.d/dnsmasq restart
            fi
        else
            echo "Failed to download hosts file."
            exit 1
        fi

        [ -f "$TMP_FILE" ] && rm $TMP_FILE
        EOF

        chmod +x openwrt/package/base-files/files/usr/bin/update_hosts.sh

    - name: Check disk space before build
      run: |
        AVAILABLE_SPACE=$(df -hT . | awk 'NR==2 {print $5}' | sed 's/%//')
        if [ "$AVAILABLE_SPACE" -ge 90 ]; then
            echo "Insufficient disk space. Aborting."
            exit 1
        fi

    - name: Update default feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Download packages
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} +

    - name: Compile firmware
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check disk space usage
      run: df -hT

    - name: Upload binary directory (optional)
      uses: actions/upload-artifact@v3
      if: success() && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize firmware files
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware
      uses: actions/upload-artifact@v3
      if: env.UPLOAD_FIRMWARE == 'true'
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Create release tag (optional)
      if: env.UPLOAD_RELEASE == 'true'
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"

    - name: Upload firmware to GitHub Release (optional)
      uses: softprops/action-gh-release@v1
      if: success() && env.UPLOAD_RELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*

    - name: Cleanup old workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old releases (optional)
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true'
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
